{"version":3,"sources":["Counter.js","JokeText.js","JokeEmoji.js","Joke.js","Loader.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["Counter","props","react_default","a","createElement","className","onClick","handleVote","id","style","borderColor","count","JokeText","jokeText","JokeEmoji","concat","votes","Joke","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","src_Counter","src_JokeText","JokeEmoji_JokeEmoji","Component","Loader","react_content_loader_es","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","cx","cy","r","JokeList","_this","state","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","e","joke","bind","assertThisInitialized","handleClick","length","setState","loadNewJokes","howManyJokesToLoad","axios","get","headers","Accept","data","has","push","uuid","prevState","toConsumableArray","setItem","stringify","_this2","alert","console","log","_context","t0","vote","_this3","filter","updatedJoke","objectSpread","Number","_this4","src","alt","disabled","Array","from","_","key","react_flip_move_es","enterAnimation","leaveAnimation","sort","b","Joke_Joke","defaultProps","App","JokeList_JokeList","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81b8caec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Counter.scss\";\r\nfunction Counter(props) {\r\n  function handleUpvote() {\r\n    props.handleVote(props.id, 1);\r\n  }\r\n\r\n  function getColor() {\r\n    if (props.count >= 15) {\r\n      return \"#4CAF50\";\r\n    } else if (props.count >= 12) {\r\n      return \"#8BC34A\";\r\n    } else if (props.count >= 9) {\r\n      return \"#CDDC39\";\r\n    } else if (props.count >= 6) {\r\n      return \"#FFEB3B\";\r\n    } else if (props.count >= 3) {\r\n      return \"#FFC107\";\r\n    } else if (props.count >= 0) {\r\n      return \"#FF9800\";\r\n    } else {\r\n      return \"#f44336\";\r\n    }\r\n  }\r\n\r\n  function handleDownvote() {\r\n    props.handleVote(props.id, -1);\r\n  }\r\n  return (\r\n    <div className=\"Counter\">\r\n      <button\r\n        className=\"Counter-button Counter-button--positive\"\r\n        onClick={handleUpvote}\r\n      >\r\n        <i className=\"fas fa-arrow-up\" />\r\n      </button>\r\n      <span>\r\n        <span className=\"Counter-votes\" style={{ borderColor: getColor() }}>\r\n          {props.count}\r\n        </span>\r\n      </span>\r\n      <button\r\n        className=\"Counter-button Counter-button--negative\"\r\n        onClick={handleDownvote}\r\n      >\r\n        <i className=\"fas fa-arrow-down\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport \"./JokeText.scss\";\r\nfunction JokeText(props) {\r\n  return (\r\n    <div className=\"JokeText\">\r\n      <p>{props.jokeText}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default JokeText;\r\n","import React from \"react\";\r\nimport Counter from \"./Counter\";\r\nimport JokeText from \"./JokeText\";\r\nimport \"./JokeEmoji.scss\";\r\nexport default function JokeEmoji(props) {\r\n  function getEmoji() {\r\n    if (props.votes >= 15) {\r\n      return \"em em-rolling_on_the_floor_laughing\";\r\n    } else if (props.votes >= 12) {\r\n      return \"em em-laughing\";\r\n    } else if (props.votes >= 9) {\r\n      return \"em em-smiley\";\r\n    } else if (props.votes >= 6) {\r\n      return \"em em-slightly_smiling_face\";\r\n    } else if (props.votes >= 3) {\r\n      return \"em em-neutral_face\";\r\n    } else if (props.votes >= 0) {\r\n      return \"em em-confused\";\r\n    } else {\r\n      return \"em em-angry\";\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"JokeEmoji\">\r\n      <i className={`JokeEmoji-emoji ${getEmoji()}`} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./Counter\";\r\nimport JokeText from \"./JokeText\";\r\nimport JokeEmoji from \"./JokeEmoji\";\r\nimport \"./Joke.scss\";\r\nexport default class Joke extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Joke\">\r\n        <Counter\r\n          handleVote={this.props.handleVote}\r\n          id={this.props.id}\r\n          count={this.props.count}\r\n        />\r\n        <JokeText jokeText={this.props.jokeText} />\r\n        <JokeEmoji votes={this.props.count} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ContentLoader from \"react-content-loader\";\r\nimport React from \"react\";\r\nexport default function Loader() {\r\n  return (\r\n    <ContentLoader\r\n      height={91}\r\n      width={571}\r\n      speed={4}\r\n      primaryColor=\"#f3f3f3\"\r\n      secondaryColor=\"#ecebeb\"\r\n    >\r\n      <rect x=\"73\" y=\"24\" rx=\"4\" ry=\"4\" width=\"422\" height=\"15\" />\r\n      <rect x=\"73\" y=\"54\" rx=\"3\" ry=\"3\" width=\"307\" height=\"13\" />\r\n      <circle cx=\"36\" cy=\"49\" r=\"24\" />\r\n      <circle cx=\"539\" cy=\"45\" r=\"24\" />\r\n    </ContentLoader>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport uuid from \"uuid/v4\";\r\nimport Joke from \"./Joke\";\r\nimport Loader from \"./Loader\";\r\nimport \"./JokeList.scss\";\r\n\r\nexport default class JokeList extends Component {\r\n  static defaultProps = {\r\n    howManyJokesToLoad: 10\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jokes: JSON.parse(window.localStorage.getItem(\"jokes\") || \"[]\"),\r\n      loading: false\r\n    };\r\n    this.seenJokes = new Set(this.state.jokes.map(e => e.joke));\r\n\r\n    this.handleVote = this.handleVote.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.state.jokes.length !== 0) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n    this.loadNewJokes();\r\n  }\r\n\r\n  async loadNewJokes() {\r\n    try {\r\n      let jokes = [];\r\n\r\n      while (jokes.length < this.props.howManyJokesToLoad) {\r\n        let { data } = await axios.get(\"https://icanhazdadjoke.com/\", {\r\n          headers: { Accept: \"application/json\" }\r\n        });\r\n\r\n        if (!this.seenJokes.has(data.joke)) {\r\n          jokes.push({ joke: data.joke, id: uuid(), votes: 0 });\r\n        } else {\r\n        }\r\n      }\r\n\r\n      this.setState(\r\n        prevState => ({\r\n          jokes: [...prevState.jokes, ...jokes],\r\n          loading: false\r\n        }),\r\n        () => {\r\n          window.localStorage.setItem(\r\n            \"jokes\",\r\n            JSON.stringify(this.state.jokes)\r\n          );\r\n        }\r\n      );\r\n    } catch (err) {\r\n      alert(\"Something went wrong.\");\r\n      console.log(err);\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  handleVote(id, vote) {\r\n    const joke = this.state.jokes.filter(joke => joke.id === id)[0];\r\n\r\n    const updatedJoke = {\r\n      ...joke,\r\n      votes: Number((joke.votes += vote))\r\n    };\r\n\r\n    this.setState(\r\n      prevState => ({\r\n        ...prevState.jokes,\r\n        updatedJoke\r\n      }),\r\n      () => {\r\n        window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes));\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({ loading: true }, this.loadNewJokes);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"JokeList\">\r\n        <div className=\"JokeList-sidebar\">\r\n          <h1 className=\"JokeList-title\">\r\n            <span>Best</span> Jokes\r\n          </h1>\r\n          <img\r\n            src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\"\r\n            alt=\"Smily face\"\r\n          />\r\n          <button\r\n            disabled={this.state.loading}\r\n            className=\"JokeList-getmore\"\r\n            onClick={this.handleClick}\r\n          >\r\n            {this.state.loading ? \"Loading...\" : \"Load More Jokes\"}\r\n          </button>\r\n        </div>\r\n        <section className=\"JokeList-jokes\">\r\n          {this.state.loading &&\r\n            Array.from({ length: this.props.howManyJokesToLoad }).map(_ => (\r\n              <Loader key={uuid()} />\r\n            ))}\r\n          <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\">\r\n            {this.state.jokes\r\n              .sort((a, b) => b.votes - a.votes)\r\n              .map(e => (\r\n                <Joke\r\n                  id={e.id}\r\n                  key={e.id}\r\n                  count={e.votes}\r\n                  jokeText={e.joke}\r\n                  handleVote={this.handleVote}\r\n                />\r\n              ))}\r\n          </FlipMove>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport JokeList from \"./JokeList\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <JokeList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}